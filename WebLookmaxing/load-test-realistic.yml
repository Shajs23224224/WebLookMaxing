config:
  target: 'http://localhost:3001'
  phases:
    # Mañana: tráfico bajo
    - duration: 3600  # 1 hora
      arrivalRate: 2   # 2 usuarios por segundo
      name: "Morning - Low traffic"

    # Mediodía: tráfico moderado
    - duration: 3600  # 1 hora
      arrivalRate: 8   # 8 usuarios por segundo
      name: "Midday - Moderate traffic"

    # Tarde: tráfico alto (hora pico)
    - duration: 3600  # 1 hora
      arrivalRate: 15  # 15 usuarios por segundo
      name: "Afternoon - High traffic"

    # Noche: tráfico bajo
    - duration: 3600  # 1 hora
      arrivalRate: 3   # 3 usuarios por segundo
      name: "Evening - Low traffic"

  defaults:
    headers:
      Content-Type: 'application/json'
      User-Agent: 'Lookmaxing Load Test - Realistic Traffic'

scenarios:
  # Patrón de comportamiento de usuario real
  - name: "Realistic user behavior"
    weight: 70
    flow:
      # Inicio de sesión o registro
      - post:
          url: "/api/auth/login"
          json:
            email: "realuser{{ $randomInt(1, 5000) }}@example.com"
            password: "password123"
          expect:
            - statusCode: [200, 401] # 401 es válido si el usuario no existe
          capture:
            json: "$.data.token"
            as: "token"

      # Navegación de productos
      - get:
          url: "/api/products?limit=12&page=1"
          headers:
            Authorization: "Bearer {{ token }}"
          expect:
            - statusCode: [200]

      # Ver detalles de productos específicos
      - loop:
          - get:
              url: "/api/products/{{ $randomString([\"507f1f77bcf86cd799439011\", \"507f1f77bcf86cd799439012\", \"507f1f77bcf86cd799439013\"]) }}"
              headers:
                Authorization: "Bearer {{ token }}"
            - think: "{{ $randomInt(1, 5) }}" # Tiempo aleatorio entre 1-5 segundos
        count: "{{ $randomInt(1, 3) }}"

      # Crear orden (20% de probabilidad)
      - think: 10
      - post:
          url: "/api/orders"
          headers:
            Authorization: "Bearer {{ token }}"
          json:
            products:
              - productId: "507f1f77bcf86cd799439011"
                quantity: 1
            shippingAddress:
              street: "Calle {{ $randomInt(1, 100) }} #{{ $randomInt(10, 99)}}-{{ $randomInt(10, 99)}}"
              city: "{{ $randomString([\"Bogotá\", \"Medellín\", \"Cali\", \"Barranquilla\", \"Cartagena\"]) }}"
              state: "{{ $randomString([\"Cundinamarca\", \"Antioquia\", \"Valle del Cauca\", \"Atlántico\", \"Bolívar\"]) }}"
              country: "Colombia"
              zipCode: "{{ $randomInt(10000, 99999) }}"
            paymentMethod: "{{ $randomString([\"paypal\", \"nequi\"]) }}"
          expect:
            - statusCode: [201, 400] # 400 puede ocurrir si no hay stock
        weight: 20 # Solo 20% de usuarios llegan a comprar

  # Comportamiento de usuarios nuevos
  - name: "New user registration"
    weight: 20
    flow:
      # Registro de nuevo usuario
      - post:
          url: "/api/auth/register"
          json:
            email: "newvisitor{{ $randomInt(50000, 99999) }}@example.com"
            password: "SecurePass123!"
            firstName: "{{ $randomString([\"Ana\", \"Carlos\", \"María\", \"Juan\", \"Sofía\", \"Miguel\"]) }}"
            lastName: "{{ $randomString([\"García\", \"Rodríguez\", \"Martínez\", \"Hernández\", \"López\", \"González\"]) }}"
            phone: "+57{{ $randomInt(300, 399) }}{{ $randomInt(1000000, 9999999) }}"
          expect:
            - statusCode: [201]

      # Explorar productos como nuevo usuario
      - get:
          url: "/api/products?limit=20&page=1"
          expect:
            - statusCode: [200]

      # Ver detalles de productos populares
      - loop:
          - get:
              url: "/api/products/{{ $randomString([\"507f1f77bcf86cd799439011\", \"507f1f77bcf86cd799439012\"]) }}"
            - think: "{{ $randomInt(2, 8) }}"
        count: 2

  # Comportamiento administrativo
  - name: "Admin panel usage"
    weight: 10
    flow:
      # Login como admin
      - post:
          url: "/api/auth/login"
          json:
            email: "admin@lookmaxing.com"
            password: "adminpassword123"
          capture:
            json: "$.data.token"
            as: "adminToken"
          expect:
            - statusCode: [200]

      # Ver dashboard de admin
      - get:
          url: "/api/admin/analytics"
          headers:
            Authorization: "Bearer {{ adminToken }}"
          expect:
            - statusCode: [200]

      # Gestionar productos
      - get:
          url: "/api/admin/products"
          headers:
            Authorization: "Bearer {{ adminToken }}"
          expect:
            - statusCode: [200]

      # Ver mensajes de WhatsApp
      - get:
          url: "/api/whatsapp/messages?limit=50&page=1"
          expect:
            - statusCode: [200]
