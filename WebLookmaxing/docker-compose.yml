version: '3.8'

services:
  # Base de datos MongoDB
  mongodb:
    image: mongo:5.0
    container_name: lookmaxing-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: lookmaxing
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - lookmaxing-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: lookmaxing-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/lookmaxing?authSource=admin
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
      PAYPAL_CLIENT_ID_SANDBOX: ${PAYPAL_CLIENT_ID_SANDBOX}
      PAYPAL_CLIENT_SECRET_SANDBOX: ${PAYPAL_CLIENT_SECRET_SANDBOX}
      NEQUI_CLIENT_ID_SANDBOX: ${NEQUI_CLIENT_ID_SANDBOX}
      NEQUI_CLIENT_SECRET_SANDBOX: ${NEQUI_CLIENT_SECRET_SANDBOX}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
    networks:
      - lookmaxing-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (opcional para cach√© de sesiones)
  redis:
    image: redis:7-alpine
    container_name: lookmaxing-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lookmaxing-network
    command: redis-server --appendonly yes

  # Nginx (reverse proxy y SSL)
  nginx:
    image: nginx:alpine
    container_name: lookmaxing-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./frontend/build/web:/var/www/html
    depends_on:
      - backend
    networks:
      - lookmaxing-network

  # Frontend (opcional - desarrollo)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: lookmaxing-frontend
    restart: unless-stopped
    environment:
      API_BASE_URL: http://localhost:3001
    volumes:
      - ./frontend:/app
      - flutter_cache:/root/.cache
    networks:
      - lookmaxing-network
    command: flutter run -d web-server --web-port 3000 --web-hostname 0.0.0.0

volumes:
  mongodb_data:
  redis_data:
  flutter_cache:

networks:
  lookmaxing-network:
    driver: bridge
